// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NftShirt.Server.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NftShirtApi.Migrations
{
    [DbContext(typeof(NftShirtContext))]
    partial class NftShirtContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NftShirt.Server.Data.Entities.Collection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ContractAdress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("ContractAdress");

                    b.ToTable("Colections", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContractAdress = "0xdF83a9754Ab29c0B14B0e43c5B7E02b85b4fA7F9",
                            Description = "Nfts feitas por IA",
                            Name = "Quill and Chill"
                        });
                });

            modelBuilder.Entity("NftShirt.Server.Data.Entities.Contract", b =>
                {
                    b.Property<string>("Adress")
                        .HasColumnType("text");

                    b.Property<string>("Abi")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("Adress");

                    b.ToTable("Contracts", (string)null);

                    b.HasData(
                        new
                        {
                            Adress = "0xdF83a9754Ab29c0B14B0e43c5B7E02b85b4fA7F9",
                            Abi = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]"
                        });
                });

            modelBuilder.Entity("NftShirt.Server.Data.Entities.Iten", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Itens", (string)null);
                });

            modelBuilder.Entity("NftShirt.Server.Data.Entities.Nft", b =>
                {
                    b.Property<string>("TokenId")
                        .HasColumnType("text");

                    b.Property<int>("ColectionID")
                        .HasColumnType("integer");

                    b.Property<string>("Metadata")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OwnerAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TokenURI")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WalletID")
                        .HasColumnType("integer");

                    b.HasKey("TokenId");

                    b.HasIndex("ColectionID");

                    b.HasIndex("WalletID");

                    b.ToTable("Nfts", (string)null);
                });

            modelBuilder.Entity("NftShirt.Server.Data.Entities.Nftag", b =>
                {
                    b.Property<string>("LinkTag")
                        .HasColumnType("text");

                    b.Property<int>("ActiveId")
                        .HasColumnType("integer");

                    b.Property<int>("ItenId")
                        .HasColumnType("integer");

                    b.Property<string>("NftHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LinkTag");

                    b.HasIndex("ItenId");

                    b.HasIndex("NftHash");

                    b.ToTable("Nftags", (string)null);
                });

            modelBuilder.Entity("NftShirt.Server.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("NftShirt.Server.Data.Entities.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Wallets", (string)null);
                });

            modelBuilder.Entity("NftShirt.Server.Data.Entities.Collection", b =>
                {
                    b.HasOne("NftShirt.Server.Data.Entities.Contract", "Contract")
                        .WithMany("Collections")
                        .HasForeignKey("ContractAdress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("NftShirt.Server.Data.Entities.Nft", b =>
                {
                    b.HasOne("NftShirt.Server.Data.Entities.Collection", "Collection")
                        .WithMany("Nfts")
                        .HasForeignKey("ColectionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NftShirt.Server.Data.Entities.Wallet", "Wallet")
                        .WithMany("Nfts")
                        .HasForeignKey("WalletID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("NftShirt.Server.Data.Entities.Nftag", b =>
                {
                    b.HasOne("NftShirt.Server.Data.Entities.Iten", "Iten")
                        .WithMany("Nftags")
                        .HasForeignKey("ItenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NftShirt.Server.Data.Entities.Nft", "Nft")
                        .WithMany("Nftags")
                        .HasForeignKey("NftHash")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Iten");

                    b.Navigation("Nft");
                });

            modelBuilder.Entity("NftShirt.Server.Data.Entities.Wallet", b =>
                {
                    b.HasOne("NftShirt.Server.Data.Entities.User", "User")
                        .WithMany("Wallets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NftShirt.Server.Data.Entities.Collection", b =>
                {
                    b.Navigation("Nfts");
                });

            modelBuilder.Entity("NftShirt.Server.Data.Entities.Contract", b =>
                {
                    b.Navigation("Collections");
                });

            modelBuilder.Entity("NftShirt.Server.Data.Entities.Iten", b =>
                {
                    b.Navigation("Nftags");
                });

            modelBuilder.Entity("NftShirt.Server.Data.Entities.Nft", b =>
                {
                    b.Navigation("Nftags");
                });

            modelBuilder.Entity("NftShirt.Server.Data.Entities.User", b =>
                {
                    b.Navigation("Wallets");
                });

            modelBuilder.Entity("NftShirt.Server.Data.Entities.Wallet", b =>
                {
                    b.Navigation("Nfts");
                });
#pragma warning restore 612, 618
        }
    }
}
